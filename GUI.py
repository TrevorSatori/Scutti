import threading
from Scutti import Scutti
from PyQt5 import QtCore, QtGui, QtWidgets


scutti = Scutti()


class Ui_Scutti(object):
    def setupUi(self, Scutti):
        Scutti.setObjectName("Scutti")
        Scutti.resize(798, 850)
        Scutti.setMaximumSize(QtCore.QSize(1920, 1080))
        self.verticalLayout = QtWidgets.QVBoxLayout(Scutti)
        self.verticalLayout.setObjectName("verticalLayout")
        self.stackedWidget = QtWidgets.QStackedWidget(Scutti)
        self.stackedWidget.setMaximumSize(QtCore.QSize(800, 800))
        self.stackedWidget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.stackedWidget.setFrameShadow(QtWidgets.QFrame.Plain)
        self.stackedWidget.setObjectName("stackedWidget")
        self.settingsPage = QtWidgets.QWidget()
        self.settingsPage.setMaximumSize(QtCore.QSize(800, 801))
        self.settingsPage.setObjectName("settingsPage")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.settingsPage)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.lblWidth = QtWidgets.QLabel(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(False)
        self.lblWidth.setFont(font)
        self.lblWidth.setAlignment(QtCore.Qt.AlignCenter)
        self.lblWidth.setObjectName("lblWidth")
        self.verticalLayout_3.addWidget(self.lblWidth)
        self.txtWidth = QtWidgets.QTextEdit(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Rubik")
        font.setPointSize(16)
        font.setBold(True)
        self.txtWidth.setFont(font)
        self.txtWidth.setObjectName("txtWidth")
        self.verticalLayout_3.addWidget(self.txtWidth)
        self.lblHeight = QtWidgets.QLabel(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(False)
        self.lblHeight.setFont(font)
        self.lblHeight.setAlignment(QtCore.Qt.AlignCenter)
        self.lblHeight.setObjectName("lblHeight")
        self.verticalLayout_3.addWidget(self.lblHeight)
        self.txtHeight = QtWidgets.QTextEdit(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Rubik")
        font.setPointSize(16)
        font.setBold(True)
        self.txtHeight.setFont(font)
        self.txtHeight.setObjectName("txtHeight")
        self.verticalLayout_3.addWidget(self.txtHeight)
        self.lblXStart = QtWidgets.QLabel(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(False)
        self.lblXStart.setFont(font)
        self.lblXStart.setAlignment(QtCore.Qt.AlignCenter)
        self.lblXStart.setObjectName("lblXStart")
        self.verticalLayout_3.addWidget(self.lblXStart)
        self.txtXStart = QtWidgets.QTextEdit(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Rubik")
        font.setPointSize(16)
        font.setBold(True)
        self.txtXStart.setFont(font)
        self.txtXStart.setObjectName("txtXStart")
        self.verticalLayout_3.addWidget(self.txtXStart)
        self.lblYStart = QtWidgets.QLabel(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(False)
        self.lblYStart.setFont(font)
        self.lblYStart.setAlignment(QtCore.Qt.AlignCenter)
        self.lblYStart.setObjectName("lblYStart")
        self.verticalLayout_3.addWidget(self.lblYStart)
        self.txtYStart = QtWidgets.QTextEdit(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Rubik")
        font.setPointSize(16)
        font.setBold(True)
        self.txtYStart.setFont(font)
        self.txtYStart.setObjectName("txtYStart")
        self.verticalLayout_3.addWidget(self.txtYStart)
        self.lblSnapKey = QtWidgets.QLabel(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(False)
        self.lblSnapKey.setFont(font)
        self.lblSnapKey.setAlignment(QtCore.Qt.AlignCenter)
        self.lblSnapKey.setObjectName("lblSnapKey")
        self.verticalLayout_3.addWidget(self.lblSnapKey)
        self.txtSnapKey = QtWidgets.QTextEdit(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Rubik")
        font.setPointSize(16)
        font.setBold(True)
        self.txtSnapKey.setFont(font)
        self.txtSnapKey.setObjectName("txtSnapKey")
        self.verticalLayout_3.addWidget(self.txtSnapKey)
        self.lblQuitKey = QtWidgets.QLabel(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(False)
        self.lblQuitKey.setFont(font)
        self.lblQuitKey.setAlignment(QtCore.Qt.AlignCenter)
        self.lblQuitKey.setObjectName("lblQuitKey")
        self.verticalLayout_3.addWidget(self.lblQuitKey)
        self.txtQuitKey = QtWidgets.QTextEdit(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Rubik")
        font.setPointSize(16)
        font.setBold(True)
        self.txtQuitKey.setFont(font)
        self.txtQuitKey.setObjectName("txtQuitKey")
        self.verticalLayout_3.addWidget(self.txtQuitKey)
        self.lblInterval = QtWidgets.QLabel(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(False)
        self.lblInterval.setFont(font)
        self.lblInterval.setAlignment(QtCore.Qt.AlignCenter)
        self.lblInterval.setObjectName("lblInterval")
        self.verticalLayout_3.addWidget(self.lblInterval)
        self.txtInterval = QtWidgets.QTextEdit(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Rubik")
        font.setPointSize(16)
        font.setBold(True)
        self.txtInterval.setFont(font)
        self.txtInterval.setObjectName("txtInterval")
        self.verticalLayout_3.addWidget(self.txtInterval)
        self.lblDelay = QtWidgets.QLabel(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(False)
        self.lblDelay.setFont(font)
        self.lblDelay.setAlignment(QtCore.Qt.AlignCenter)
        self.lblDelay.setObjectName("lblDelay")
        self.verticalLayout_3.addWidget(self.lblDelay)
        self.txtDelay = QtWidgets.QTextEdit(self.settingsPage)
        font = QtGui.QFont()
        font.setFamily("Rubik")
        font.setPointSize(16)
        font.setBold(True)
        self.txtDelay.setFont(font)
        self.txtDelay.setObjectName("txtDelay")
        self.verticalLayout_3.addWidget(self.txtDelay)

        # Home Button
        self.btnHomeNav = QtWidgets.QPushButton(self.settingsPage, clicked = lambda: self.toHome())
        font = QtGui.QFont()
        font.setFamily("Titillium Web")
        font.setPointSize(12)
        self.btnHomeNav.setFont(font)
        self.btnHomeNav.setObjectName("btnHomeNav")
        self.verticalLayout_3.addWidget(self.btnHomeNav)
        self.stackedWidget.addWidget(self.settingsPage)
        self.homePage = QtWidgets.QWidget()
        self.homePage.setMaximumSize(QtCore.QSize(800, 800))
        self.homePage.setObjectName("homePage")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.homePage)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(self.homePage)
        font = QtGui.QFont()
        font.setFamily("Titillium Web")
        font.setPointSize(36)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        spacerItem = QtWidgets.QSpacerItem(40, 40, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout_2.addItem(spacerItem)
        self.lblCollection = QtWidgets.QLabel(self.homePage)
        font = QtGui.QFont()
        font.setFamily("Titillium Web")
        font.setPointSize(20)
        self.lblCollection.setFont(font)
        self.lblCollection.setAlignment(QtCore.Qt.AlignCenter)
        self.lblCollection.setObjectName("lblCollection")
        self.verticalLayout_2.addWidget(self.lblCollection)
        self.txtCollection = QtWidgets.QTextEdit(self.homePage)
        font = QtGui.QFont()
        font.setFamily("Titillium Web")
        font.setPointSize(24)
        self.txtCollection.setFont(font)
        self.txtCollection.setObjectName("txtCollection")
        self.verticalLayout_2.addWidget(self.txtCollection)

        # Settings
        self.btnSettingsNav = QtWidgets.QPushButton(self.homePage, clicked = lambda: self.toSettings())
        font = QtGui.QFont()
        font.setFamily("Titillium Web")
        font.setPointSize(20)
        self.btnSettingsNav.setFont(font)
        self.btnSettingsNav.setObjectName("btnSettingsNav")
        self.verticalLayout_2.addWidget(self.btnSettingsNav)
        spacerItem1 = QtWidgets.QSpacerItem(100, 350, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout_2.addItem(spacerItem1)
        self.cmbSelect = QtWidgets.QComboBox(self.homePage)
        self.cmbSelect.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("Titillium Web")
        font.setPointSize(20)
        font.setBold(False)
        self.cmbSelect.setFont(font)
        self.cmbSelect.setObjectName("cmbSelect")
        self.cmbSelect.addItem("")
        self.cmbSelect.addItem("")
        self.cmbSelect.addItem("")
        self.cmbSelect.addItem("")
        self.verticalLayout_2.addWidget(self.cmbSelect)

        # Start Button
        self.btnStart = QtWidgets.QPushButton(self.homePage, clicked = lambda: self.run())
        font = QtGui.QFont()
        font.setFamily("Titillium Web")
        font.setPointSize(20)
        font.setBold(False)
        self.btnStart.setFont(font)
        self.btnStart.setObjectName("btnStart")
        self.verticalLayout_2.addWidget(self.btnStart)
        self.stackedWidget.addWidget(self.homePage)
        self.verticalLayout.addWidget(self.stackedWidget)

        self.retranslateUi(Scutti)
        self.stackedWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(Scutti)

    def retranslateUi(self, Scutti):
        _translate = QtCore.QCoreApplication.translate
        Scutti.setWindowTitle(_translate("Scutti", "Form"))
        self.lblWidth.setText(_translate("Scutti", "Width"))
        self.lblHeight.setText(_translate("Scutti", "Height"))
        self.lblXStart.setText(_translate("Scutti", "X Start"))
        self.lblYStart.setText(_translate("Scutti", "Y Start"))
        self.lblSnapKey.setText(_translate("Scutti", "Capture Key"))
        self.lblQuitKey.setText(_translate("Scutti", "Quit Key"))
        self.lblInterval.setText(_translate("Scutti", "Interval"))
        self.lblDelay.setText(_translate("Scutti", "Initial Delay"))
        self.btnHomeNav.setText(_translate("Scutti", "Home"))
        self.label.setText(_translate("Scutti", "Scutti"))
        self.lblCollection.setText(_translate("Scutti", "Collection Name"))
        self.btnSettingsNav.setText(_translate("Scutti", "Settings"))
        self.cmbSelect.setItemText(0, _translate("Scutti", "Manual Screenshot"))
        self.cmbSelect.setItemText(1, _translate("Scutti", "Automatic Screenshot"))
        self.cmbSelect.setItemText(2, _translate("Scutti", "Manual Camera"))
        self.cmbSelect.setItemText(3, _translate("Scutti", "Automatic Camera"))
        self.btnStart.setText(_translate("Scutti", "Start"))

    # Navigation  
    def toSettings(self):
        self.stackedWidget.setCurrentIndex(0)
    
    # Navigation  
    def toHome(self):
        self.update()
        self.stackedWidget.setCurrentIndex(1)

    # Update Values
    def update(self):

        if len(self.txtWidth.toPlainText()) > 0: 
            scutti.setWidth(int(self.txtWidth.toPlainText()))
            print('Width set: ', scutti.getWidth())
        
        if len(self.txtHeight.toPlainText()) > 0:
            scutti.setHeight(int(self.txtHeight.toPlainText()))
            print('Height set: ', scutti.getHeight())

        if len(self.txtXStart.toPlainText()) > 0:
            scutti.setXStart(int(self.txtXStart.toPlainText()))
            print('XStart set: ', scutti.getXStart())

        if len(self.txtYStart.toPlainText()) > 0:
            scutti.setYStart(int(self.txtYStart.toPlainText()))
            print('YStart set: ', scutti.getYStart())

        if len(self.txtInterval.toPlainText()) > 0:
            scutti.setInterval(int(self.txtInterval.toPlainText()))
            print('Interval set: ', scutti.getInterval())
        
        if len(self.txtDelay.toPlainText()) > 0:
            scutti.setDelay(int(self.txtDelay.toPlainText()))
            print('Delay set: ', scutti.getDelay())
        
        if len(self.txtSnapKey.toPlainText()) > 0:
            if len(self.txtSnapKey.toPlainText()) >= 2:
                print('Capture key must be 1 key')
                return
            scutti.setSnapKey(self.txtSnapKey.toPlainText())
            print('Capture key set: ', scutti.getSnapKey())
    
        if len(self.txtQuitKey.toPlainText()) > 0:
            if len(self.txtQuitKey.toPlainText()) >= 2:
                print('Quit key must be 1 key')
                return
            scutti.setQuitKey(self.txtQuitKey.toPlainText())
            print('Quit key set:', scutti.getQuitKey())
        
        # Error handling
        scutti.seemsLegit()

    # Runtime Logic
    def run(self):

        # Set Collection
        scutti.setcollection(self.txtCollection.toPlainText())

        # Choose function
        if self.cmbSelect.currentText() == 'Manual Screenshot':
            task = threading.Thread(target=scutti.sctManual)
            task.start()
        elif self.cmbSelect.currentText() == 'Automatic Screenshot':
            task = threading.Thread(target=scutti.sctAuto())
            task.start()
        elif self.cmbSelect.currentText() == 'Manual Camera':
            task = threading.Thread(target=scutti.camManual())
            task.start()
        elif self.cmbSelect.currentText() == 'Automatic Camera':
            task = threading.Thread(target=scutti.camAuto())
            task.start()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Scutti()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
